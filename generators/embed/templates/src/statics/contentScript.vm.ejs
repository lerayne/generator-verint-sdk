## getting widget ID for futher use
#set($widgetId = $core_v2_widget.UniqueId('wrapper'))

## configuration JSON object
#set($configJSONText = $core_v2_encoding.JavascriptEncode($core_v2_widget.GetStringValue('configuration', '')))

## Attachment files URLs can't be used as is - they're generated 
##  dynamically, so we have to get them with this kind of request
#set($cssViewLink = $core_v2_widget.GetFileUrl('bundle-view.css'))

## fix issue with HTML escaped css URL
## todo: make a function that gets file URL and unescapes it
#if($core_v2_utility.IsMatch($cssViewLink, "&amp;"))
  #set($cssViewLink = $core_v2_encoding.HtmlDecode($cssViewLink))
#end

## doing the same for JS files
#set($jsVendorLink = $core_v2_encoding.HtmlAttributeEncode($core_v2_widget.GetFileUrl('bundle-vendor.js')))
#set($jsViewLink = $core_v2_encoding.HtmlAttributeEncode($core_v2_widget.GetFileUrl('bundle-view.js')))

## registering some vars for future use in JS initializer
#set($anyFileURL = $core_v2_widget.GetFileUrl('bundle-view.js'))


## Widget view HTML starts here

## root container to render ($-variables are replaced with their actual values by Velocity)
<div id="$widgetId"></div>

## main stylesheet
<link rel="stylesheet" href="$cssViewLink" type="text/css" />

<link rel="preconnect" href="https://fonts.gstatic.com">
<link href="https://fonts.googleapis.com/css2?family=Maven+Pro:wght@400;600;700&display=swap" rel="stylesheet">

## main end-user script
<script type="text/javascript" src="$jsVendorLink"></script>
<script type="text/javascript" src="$jsViewLink"></script>

## entry point (on load event for react app)
<script type="text/javascript" id="<%= safeName %>_view">
  jQuery(function() {
  	// get any file's and remove the file ending to get root URL of the widget
    const attachmentsRootUrl = '$anyFileURL'.split('/').slice(0, -1).join('/')

    // set JS variables for widget
    jQuery.telligent.evolution.widgets['<%= safeName %>'].view.register({
      widgetId: '$widgetId',
      configJSONText: '$configJSONText',
      wrapperElementId: '$core_v2_widget.WrapperElementId',
      attachmentsRootUrl: attachmentsRootUrl,
      langCode: "$core_v2_language.CodeAndLocale",
      lang: {
        vangVar1: "$core_v2_encoding.JavascriptEncode($core_v2_language.GetResource('resource-name-1'))",
      }
    })
  })
</script>